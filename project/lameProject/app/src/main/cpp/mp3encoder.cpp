/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <lame/lame.h>
#include <encoder/mp3encoderWorker.h>
/* Header for class com_kingpei_lameproject_Mp3Encoder */


#ifdef __cplusplus
extern "C" {
#endif

Mp3Encoder* mp3Encoder;

/*
 * Class:     com_kingpei_lameproject_Mp3Encoder
 * Method:    init
 * Signature: (Ljava/lang/String;IIILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_kingpei_lameproject_Mp3Encoder_init
        (JNIEnv * env, jclass clazz, jstring pcmPath, jint audioChannels, jint bitRate, jint sampleRate, jstring mp3Path){
    const char * pcm = env->GetStringUTFChars(pcmPath, NULL);
    const char * mp3 = env->GetStringUTFChars(mp3Path, NULL);

    mp3Encoder = new Mp3Encoder();
    int ret = mp3Encoder->Init(pcm, mp3, sampleRate, audioChannels, bitRate);

    env->ReleaseStringUTFChars(pcmPath, pcm);
    env->ReleaseStringUTFChars(mp3Path, mp3);

    return ret;
};

/*
 * Class:     com_kingpei_lameproject_Mp3Encoder
 * Method:    encode
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_kingpei_lameproject_Mp3Encoder_encode
        (JNIEnv * env, jclass jclazz){
    if(mp3Encoder){
        mp3Encoder->Encode();
    }
};

/*
 * Class:     com_kingpei_lameproject_Mp3Encoder
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_kingpei_lameproject_Mp3Encoder_destroy
        (JNIEnv * env, jclass jclazz){
    if(mp3Encoder){
        mp3Encoder->Destroy();
    }
};

#ifdef __cplusplus
}
#endif
